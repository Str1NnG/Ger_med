name: CI/CD - Laravel & React

on:
  push:
    branches:
      - main
      - master  # Agora s√≥ roda testes quando houver push na main ou master
  pull_request:
    branches:
      - main
      - master  # Roda os testes antes de integrar qualquer c√≥digo na main ou master

jobs:
  # üîπ JOB 1: Testes no backend (Laravel)
  backend-tests:
    runs-on: ubuntu-latest

    services:

     services:
  mysql:
    image: mysql:8.0
    env:
      MYSQL_ROOT_PASSWORD: 2123
      MYSQL_DATABASE: ger_est_test
      MYSQL_USER: root
      MYSQL_PASSWORD: 2123  # ‚¨ÖÔ∏è Certifique-se de que isso est√° correto
      MYSQL_ALLOW_EMPTY_PASSWORD: yes # ‚¨ÖÔ∏è N√£o permite conex√µes sem senha
    options: --health-cmd="mysqladmin ping --silent"
    ports:
      - 3306:3306


    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v3

      - name: Configurar PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Instalar depend√™ncias do Laravel
        run: composer install --no-progress --no-suggest --prefer-dist

     - name: Configurar ambiente (.env)
  run: |
    echo "APP_ENV=testing" > .env
    echo "APP_KEY=$(php artisan key:generate --show)" >> .env
    echo "APP_DEBUG=true" >> .env
    echo "APP_URL=http://localhost:8000" >> .env
    echo "LOG_CHANNEL=stack" >> .env
    echo "LOG_LEVEL=debug" >> .env
    echo "DB_CONNECTION=mysql" >> .env
    echo "DB_HOST=mysql" >> .env  # ‚¨ÖÔ∏è Garantindo que Laravel se conecta no MySQL certo
    echo "DB_PORT=3306" >> .env
    echo "DB_DATABASE=ger_est_test" >> .env
    echo "DB_USERNAME=root" >> .env
    echo "DB_PASSWORD=2123" >> .env  # ‚¨ÖÔ∏è Laravel agora ter√° a senha certa!
    echo "SESSION_DRIVER=array" >> .env
    echo "CACHE_DRIVER=array" >> .env



      - name: Rodar migra√ß√µes
        run: php artisan migrate

      - name: Rodar testes unit√°rios (PHPUnit)
        run: vendor/bin/phpunit

  # üîπ JOB 2: Testes automatizados com Laravel Dusk
  dusk-tests:
    runs-on: ubuntu-latest
    needs: backend-tests  # S√≥ roda Dusk depois que os testes unit√°rios passaram

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: 2123
          MYSQL_DATABASE: ger_est_test
       
        options: --health-cmd="mysqladmin ping --silent"
        ports:
          - 3306:3306

    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v3

      - name: Configurar PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Instalar depend√™ncias do Laravel
        run: composer install --no-progress --no-suggest --prefer-dist

      - name: Configurar ambiente (.env)
        run: |
          echo "APP_ENV=testing" > .env
          echo "APP_KEY=$(php artisan key:generate --show)" >> .env
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=ger_est_test" >> .env
          echo "DB_USERNAME=root" >> .env
          echo "DB_PASSWORD=2123" >> .env

      - name: Rodar migra√ß√µes
        run: php artisan migrate --force

      - name: Instalar Dusk
        run: php artisan dusk:install

      - name: Rodar testes do Laravel Dusk
        env:
          APP_URL: http://127.0.0.1:8000
        run: php artisan dusk

  # üîπ JOB 3: Testes no frontend (React)
  frontend-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '21'

      - name: Instalar depend√™ncias do React
        run: npm install
        working-directory: frontend2/germedfrontend  # Ajuste se necess√°rio

      - name: Rodar testes do frontend (Jest)
        run: npm test -- --watchAll=false
        working-directory: frontend2/germedfrontend  # Ajuste se necess√°rio
